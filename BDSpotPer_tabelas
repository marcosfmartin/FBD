-----------------------------------------------------------------------------------------------------------------------------
-- TABELAS---
-----------------------------------------------------------------------------------------------------------------------------

DROP TABLE IF EXISTS gravadora cascade;
CREATE TABLE gravadora (
id_grav smallint PRIMARY KEY,
grav_nome text NOT NULL,
grav_ender text NOT NULL,
grav_fone integer[] NOT NULL,
grav_url text NOT NULL
);

DROP TABLE IF EXISTS album cascade;
CREATE TABLE album
(
id_album smallint PRIMARY KEY,
album_nome text NOT NULL,
album_descrip text NOT NULL,
album_dt_compra date NOT NULL,
album_tipo_compra boolean NOT NULL, -- 0 para digital, 1 para físico
album_preço_compra decimal(12,2)  NOT NULL,
album_id_grav smallint NOT NULL,
CONSTRAINT al_FK_id_grav FOREIGN KEY (album_id_grav) REFERENCES gravadora (id_grav) ON DELETE SET NULL

);


DROP TABLE IF EXISTS tipo_comp cascade;
CREATE TABLE tipo_comp
(
id_tcomp smallint PRIMARY KEY,
tcomp_descrip text NOT NULL

);


DROP TABLE IF EXISTS faixa cascade;
CREATE TABLE faixa
(
id_faixa smallint PRIMARY KEY,
faixa_id_album smallint NOT NULL,
faixa_nome text NOT NULL,
faixa_posicao smallint NOT NULL,
faixa_descrip text NOT NULL,
faixa_tempo interval NOT NULL,
faixa_tipo_grav boolean NOT NULL, -- 0 para ADD, 1 para DDD
faixa_id_tcomp smallint NOT NULL,
CONSTRAINT faixa_FK_id_tcomp FOREIGN KEY (faixa_id_tcomp) REFERENCES tipo_comp (id_tcomp) ON DELETE SET NULL,
CONSTRAINT faixa_FK_id_album FOREIGN KEY (faixa_id_album) REFERENCES album (id_album) ON DELETE CASCADE,
unique (faixa_id_album, faixa_posicao)

);




DROP TABLE IF EXISTS interprete cascade;
CREATE TABLE interprete
(
id_inter smallint PRIMARY KEY,
interprete_nome text NOT NULL,
interprete_tipo text NOT NULL

);


DROP TABLE IF EXISTS periodo cascade;
CREATE TABLE periodo
(
id_periodo smallint PRIMARY KEY,
periodo_dt_inicio date NOT NULL,
periodo_dt_fim date DEFAULT NULL,
periodo_descrip text NOT NULL
);


DROP TABLE IF EXISTS compositor cascade;
CREATE TABLE compositor
(
id_comp smallint PRIMARY KEY,
comp_nome text NOT NULL,
comp_dt_nasc date NOT NULL,
comp_dt_morte date DEFAULT NULL,
comp_id_periodo smallint,
CONSTRAINT comp_FK_id_periodo FOREIGN KEY (comp_id_periodo) REFERENCES periodo (id_periodo)  ON DELETE SET NULL
);

DROP TABLE IF EXISTS compositorXfaixa cascade;
CREATE TABLE compositorXfaixa
(
id_comp_faixa smallint PRIMARY KEY,
id_comp smallint NOT NULL,
id_faixa smallint NOT NULL,
CONSTRAINT compX_FK_id_comp FOREIGN KEY (id_comp) REFERENCES compositor (id_comp) ON DELETE CASCADE,
CONSTRAINT compX_FK_id_faixa FOREIGN KEY (id_faixa) REFERENCES faixa (id_faixa) ON DELETE CASCADE
);


DROP TABLE IF EXISTS interpreteXfaixa cascade;
CREATE TABLE interpreteXfaixa
(
id_inter_faixa smallint PRIMARY KEY,
id_inter smallint NOT NULL,
id_faixa smallint NOT NULL,
CONSTRAINT interX_FK_id_inter FOREIGN KEY (id_inter) REFERENCES interprete (id_inter) ON DELETE CASCADE,
CONSTRAINT interX_FK_id_faixa FOREIGN KEY (id_faixa) REFERENCES faixa (id_faixa) ON DELETE CASCADE
);





DROP TABLE IF EXISTS playlist cascade;
CREATE TABLE playlist (
id_play smallint PRIMARY KEY,
play_nome text NOT NULL,
play_dt date NOT NULL
-- play_tempo interval NOT NULL PRECISA PEGAR DOS TEMPOS DAS FAIXAS
);


DROP TABLE IF EXISTS playlistXfaixa cascade;
CREATE TABLE playlistxFaixa (
id_playlistxFaixa smallint PRIMARY KEY,
id_play smallint,
id_faixa smallint,
playXfaixa_lastPlayed date default NULL ,
playXfaixa_played integer NOT NULL default 0,
CONSTRAINT playX_FK_id_comp FOREIGN KEY (id_play) REFERENCES playlist (id_play) ON DELETE CASCADE,
CONSTRAINT playX_FK_id_faixa FOREIGN KEY (id_faixa) REFERENCES faixa (id_faixa) ON DELETE CASCADE
);




